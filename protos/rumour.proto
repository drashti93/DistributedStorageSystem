syntax = "proto3";

package rumour;

service Rumour {
  rpc sendRumourData (MyDataRequest) returns (MyDataReply) {};
  rpc receiveRumourData (RumourDataRequest) returns (RumourDataReply) {};
  rpc receiveMemoryRequest (MemoryDataRequest) returns (MemoryDataReply) {};
  rpc sendMemoryData (MemoryDataRequest) returns (MemoryStatsReply) {};
  rpc sendheartbeat (HeartBeatRequest) returns (HeartBeatReply) {};
  rpc receiveheartbeat (HeartBeatReply) returns (HeartBeatRequest) {};
  rpc sendRequestForEdge (EdgeNodeRequest) returns (EdgeNodeReply) {};
  rpc receiveRequestForEdge (EdgeNodeReply) returns (EdgeNodeRequest) {}
}
message EdgeNodeRequest{
    string deletednode_pos = 1;
    string deletednode_neighbours = 2;
    string dir1 = 3;
    string dir2 = 4;
}
message EdgeNodeReply{

}
message HeartBeatRequest{
    string ip = 1;
    string pos = 2;
    int32 hearbeatcount = 3;
    int64 timestamp = 4;
    string wholemesh = 5;
    string heartbeatdict = 6;
}
message HeartBeatReply{

}
message MyDataRequest {
    string victim_ip = 1;
    string victim_pos = 2;
    string action = 3;
    string ishole = 4;
    string wholemesh = 5;
    string count = 6;
}

message MemoryDataRequest{

}
message MemoryStatsRequest{
    float cpu_usage = 1;
  int64 memory_usage = 2;
  int64 disk_usage = 3;
}
message MemoryStatsReply{

}
message MemoryDataReply{
    string request = 1;
}

message RumourDataRequest {

}
message RumourDataReply{
    string victim_ip = 1;
    string victim_pos = 2;
    string action = 3;
    string ishole = 4;
    string wholemesh = 5;
    string count = 6;
}
message MyDataReply {
}